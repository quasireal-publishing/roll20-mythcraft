.creature {
  max-width: 550px;
  min-height: 500px;

  h2 {
    @extend .uppercase;
    @extend .text-primary;
    @extend .font-bold;
  }

  .display h3 {
    font-weight: 700;
    @extend .font-base;
  }

  span.display[name="attr_character_name"] {
    color: $primary;
    @extend .font-h1;
  }

  button[type="roll"]:has(span:empty),
  .display-span:has(span:empty),
  span:empty {
    display: none;
  }

  .settings-toggle {
    top: 4px;
    right: 4px;

    .toggle-settings {
      grid-column: 1 / -1;

      & + span {
        grid-column: 1 / -1;
      }
    }
  }

  input[name="attr_hp"],
  input[name="attr_armor_rating"] {
    text-align: center;
  }

  .bio {
    grid-template-columns: 1fr 100px 50px;
  }

  span[name="attr_size"]::after,
  span[name="attr_type"]::after {
    content: ".";
  }

  .size-tags {
    grid-template-columns: 1fr minmax(250px, 2fr);
  }

  .hp-armor-speed {
    grid-template-columns: 1fr 1.5fr minmax(250px, 2fr);
  }

  .attrs {
    grid-template-columns: repeat(6, 1fr);

    .luck,
    .coordination {
      display: none;
    }

    .reflexes {
      grid-column: 2 / 3;
    }
    .fortitude {
      grid-column: 3 / 4;
    }
    .anticipation {
      grid-column: 4 / 5;
    }
    .logic {
      grid-column: 5 / 6;
    }
    .willpower {
      grid-column: 6 / 7;
    }
  }

  div.repeating_skills {
    .category {
      display: none;
    }

    .custom-grid {
      grid-auto-columns: min-content;
    }
  }

  .actions {
    span.or {
      display: none;
    }

    textarea[name="attr_action_description"] {
      height: $spacing-20;
      white-space: pre-wrap;
    }

    span[name="attr_action_description"] {
      white-space: pre-wrap;
    }

    .range {
      grid-template-columns: $spacing-38 1fr;
    }

    .bonus {
      grid-template-columns: $spacing-38 auto 1fr;
    }

    @for $i from 1 through 10 {
      input[name="attr_name"][value*="Tier #{$i} Actions"] {
        & ~ .grid button[type="roll"],
        & ~ .collapsible,
        & ~ .toggle-collapse,
        & ~ .toggle-collapse + span {
          display: none;
        }

        & ~ .grid span.or {
          display: inline;
        }

        & + .custom-grid {
          grid-auto-columns: max-content;
          grid-template-columns: 1fr;
          text-align: center;
        }
      }
    }

    @each $value in ("or", "OR", "…and", "…AND", "and", "AND") {
      input[name="attr_name"][value="#{$value}"] {
        & ~ .grid button[type="roll"],
        & ~ .collapsible,
        & ~ .toggle-collapse,
        & ~ .toggle-collapse + span {
          display: none;
        }

        & ~ .grid span.or {
          display: inline;
        }

        & + .custom-grid {
          grid-auto-columns: max-content;
        }
      }
    }

    .damage {
      grid-template-columns: 1fr 1fr;
    }

    .dmg {
      grid-template-columns: 1fr 2fr;
    }
  }

  input[name="attr_toggle_action_attack"]:not([value="on"]) + div {
    display: none;
  }

  .features {
    .custom-grid {
      grid-template-columns: 1fr 2fr;
    }
  }
}
