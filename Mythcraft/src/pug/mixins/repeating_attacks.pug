mixin repeatingAttacks()
	fieldset(class="repeating_attacks")
		input(type="hidden" name="attr_link" value="")
		input(type="hidden" name="attr_attribute_abbreviation" value= "STR")
		input(type="hidden" name="attr_roll_formula" value=`{{dice=[[1d20+${attribute}+${bonus}+${tactical}+${luckEffect}]]}} {{damage=[Damage](~repeating_attacks-roll_damage)}}`)
		.grid.gap-2.relative.repeating-grid 
			.grid.grid-flow-col.gap-2.displayed.custom-grid
				.grid.gap-2.grid-flow-col
					+repeatingAttackRollButton('name')
				each val in  ['apc', 'attribute_abbreviation', 'bonus', 'damage', 'damage type', 'range']
					if val === "damage"
						+repeatingDamageButton(val)(class="text-center")
					else
						+attrSpan(val)(class="text-center")
			+editToggle()
			+collapseToggle()
			.collapsible.grid.gap-2
				+headerSpan(['tags', "type", "size"])
				.description
					span.display(name='attr_description')
			.edit.grid.gap-2
				+textInputs(["name", "tags"])
				.grid.gap-2.grid-flow-col.items-center
					+editInput("apc")
					+attributeSelect("attribute")
					span.text-center
						| +
					.grid.gap-2.col-auto-fr.items-center
						+editInput("modifier", 0)
				.grid.gap-2.grid-flow-col
					+editInput('damage')
					+attributeSelect('damage attribute')
					+editInput('damage type')
				+textInputs(["range", "reload", "size"])
				+textInputs(["category", "subcategory", "type"])
				.description
					+textarea('description')
