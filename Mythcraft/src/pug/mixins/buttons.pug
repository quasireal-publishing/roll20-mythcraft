- const templatePrefix = "&{template:rolls}"
- const criticalStrike = "cs@{critical_range}"
- const luckEffect = `(@{luck_negative_modifier}[negative luck modifier])${criticalStrike}`
- const attribute = "@{attribute}[attribute]"
- const bonus = "(@{bonus}[bonus])"
- const tactical = "(?{TA/TD|0}[tactical bonus])"

//- Luck is < 0 you can never crit hit & subtract Luck from every d20
//- Luck >= 1 crits add Luck to damage

//- Attack roll 1d20 + attribute + TA/TD (+/- #	) - luck (luck < 0 ? -luck : 0) cs (luck < 0 ? no cs : critical_target)

//- damage luck >= 1 ? +luck : 0 (on crit)

mixin attributeRoll(name, attr)
	button.text-center.uppercase(class!=`${attributes.class} ${attr}` data-i18n=name name=`roll_${dashedName(attr)}` type='roll' value!=`${templatePrefix} {{header=^{${attr}}}} {{dice=[[1d20+@{${attr}}[attribute]+${luckEffect}]]}} `)

mixin rollButton(name, formula)
	button.text-capitalize(class!=attributes.class data-i18n=name name=`roll_${dashedName(name)}` type='roll' value!=`${templatePrefix} {{header=^{${name}}}} {{dice=[[1d20+${formula}+${luckEffect}]]}} {{description=@{description}}}`)

mixin initiativeButton()
	- const name = "initiative"
	button.text-capitalize(class!=attributes.class data-i18n=name name=`roll_${dashedName(name)}` type='roll' value!=`${templatePrefix} {{header=^{${name}}}} {{dice=[[1d20+@{awareness}[awareness]+@{initiative_bonus}[bonus] &{tracker}]]}}`)

mixin repeatingRollButton(name, includeDescription = false)
	- const description = includeDescription ? "{{description=@{description}}" : ""
	button.text-left.ellipsis.font-weight-bold(class!=attributes.class name=`roll_${dashedName(name)}` type='roll' value!=`${templatePrefix} {{header=@{name}}} {{dice=[[1d20+${attribute}+${bonus}+${luckEffect}]]}} {${description}}}`)
		span(name='attr_name')

mixin repeatingAttackRollButton(name, includeDescription = false)
	- const description = includeDescription ? "{{description=@{description}}" : ""
	button.text-left.ellipsis.font-weight-bold(class!=attributes.class name=`roll_${dashedName(name)}` type='roll' value!=`${templatePrefix} {{header=@{name}}} @{roll_formula}`)
		span(name='attr_name')

mixin repeatingMagicButton(name)
	button.text-left.ellipsis.font-weight-bold(class!=attributes.class name=`roll_${dashedName(name)}` type='roll' value!=`${templatePrefix} {{header=@{name}}} @{roll_formula}`)
		span(name='attr_name')

mixin repeatingDamageButton(name, includeDescription = false)
	button.ellipsis.font-weight-bold(class!=attributes.class name=`roll_${dashedName(name)}` type='roll' value!=`${templatePrefix} {{header=@{name} Damage}} {{dice=[[@{damage}[damage]]]}} {{type=@{damage_type}}}`)
		span(name='attr_damage')

mixin repeatingChatIconButton(name)
	button.chat(class!=attributes.class name=`roll_${dashedName(name)}` type='roll' value!=`${templatePrefix} {{header=@{name}}} {{dice=@{description}}}`)
		span.pictos q

mixin repeatingChatButton(name)
	button.text-left.chat(class!=attributes.class name=`roll_${dashedName(name)}` type='roll' value!=`${templatePrefix} {{header=@{name}}} {{description=@{description}}}`)
		span(name='attr_name')
