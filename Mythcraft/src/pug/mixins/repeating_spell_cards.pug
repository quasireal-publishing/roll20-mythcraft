mixin repeatingSpellCards()
	fieldset(class="repeating_spells")
		input(type="hidden" name="attr_link" value="")
		input(type="hidden" name="attr_roll_formula" value="{{description=@{description}}}")
		input(type="hidden" name="attr_modifier" value="0")
		input(type="hidden" name="attr_source" value="arcane")
		.grid.gap-2.relative.repeating-grid.h-full.content-start.card
			.grid.grid-flow-col.gap-2.displayed.custom-grid.col-span-full
				+repeatingMagicButton('name')
			.grid.gap-2.items-center.col-span-full(class!=attributes.class)
				+attrSpan("tags")(class="capitalize")
			.grid.gap-2.grid-flow-col.col-span-full
				each val in ["apc", "spc"]
					.grid.gap-2.grid-flow-col.display-span.col-auto-fr
						h4.uppercase(data-i18n=val)
						+attrSpan(val)(class="capitalize")
			+editToggle()
			+collapseToggle()
			.collapsible.grid.gap-2
				+headerSpan(["range", "requires", "duration"])
				.grid.gap-2.col-auto-fr.items-center.display-span
					+h4Header("damage")
					+repeatingDamageButton("damage")(class="capitalize")
				.grid.gap-2.col-auto-fr.items-center.display-span
					+h4Header("damage type")
					+attrSpan("damage type")(class="capitalize")
				+headerSpan(["casting time", "recharge"])
				.description
					span.display(name='attr_description')
			.edit.grid.gap-2
				.grid.gap-2.edit-grid
					+textInputs(["name"])
					.grid.gap-2.grid-flow-col.grid-cols-2.items-center
						.grid.gap-2.grid-flow-col.col-auto-fr.items-center
							+h4Header("source")
							select(name="attr_source")
								each val in magicSources
									option(value=`${val}` data-i18n=val)
										val
						.grid.gap-2.grid-flow-col.items-center.attack-toggle.col-auto-fr
							+h4Header("attack")
							label.switch(data-i18n-title="toggle attack")
								input(type="checkbox" name="attr_toggle_spell_attack")
								span.slider
		
					+textInputs(["tags"])
					+textInputs(["apc", "spc", "range"]).pc-grid-cols
					+textInputs(["requires"])
					+textInputs(["duration"])
					+textInputs(["damage", "damage type"]).grid-cols-2
					+textInputs(["casting time"])
					+textInputs(["recharge"])
					each val in ["prerequisites", "upcharge"]
						.grid.gap-2.col-auto-fr.items-center
							+h4Header(val)
							+textInput(val)
				.description
					+textarea('description')